{"version":3,"sources":["js/fetchApi.js","js/markup-movie-card.js","index.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","genres","fetchMovie","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","catch","error","console","log","query","newQuery","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","movieGallery","document","querySelector","errorText","fetchNormaMovie","style","visibility","movieData","results","map","movieEl","genre_ids","generEl","join","total_results","innerHTML","createCards","el","idx","poster_path","movieCard","createElement","title","release_date","substr","getElementById","homeBtn","onHomeBtn","e","location","onSearchBtn","target","closest","preventDefault","currentTarget","elements","value","addEventListener"],"mappings":"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","file":"src.f09f7842.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.genres = {};\n  }\n\n  async fetchMovie() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  async getGenres() {\n    return await fetch(\n      `${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`\n    )\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      });\n  }\n  get genresValue() {\n    return this.genres;\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst movieGallery = document.querySelector(`.gallery`);\nconst errorText = document.querySelector(`.search__error`);\n\nexport default function fetchNormaMovie() {\n  errorText.style.visibility = `hidden`;\n  apiService.getGenres();\n  apiService.fetchMovie().then(movieData => {\n    const genres = apiService.genresValue;\n    const normaGenres = movieData.results.map(movieEl => {\n      return movieEl.genre_ids\n        .map(generEl => {\n          if (genres[generEl]) return genres[generEl];\n        })\n        .join(', ');\n    });\n    if (movieData.total_results === 0) {\n      movieGallery.innerHTML = '';\n      errorText.style.visibility = `visible`;\n    } else {\n      movieGallery.innerHTML = createCards(movieData, normaGenres);\n    }\n  });\n}\n\nfunction createCards(movieData, normaGenres) {\n  return movieData.results\n    .map((el, idx) => {\n      if (el.poster_path !== null) {\n        let movieCard = document.createElement(`div`);\n        return (movieCard.innerHTML = `<div class=\"movie-card\">\n<img src=\"https://image.tmdb.org/t/p/w500${el.poster_path}\" data-id=\"${\n          el.id\n        }\" alt=\"There should be a poster ðŸ˜®\">\n  <div class=\"movie-card__title\">\n\t\t<span>${el.title}</span>\n\t<div class=\"movie-card__info-item\">\n\t\t<span>${normaGenres[idx]} | ${el.release_date.substr(0, 4)}</span>\n\t</div>\n  </div>\n</div>`);\n      }\n    })\n    .join('');\n}\n","import apiService from './js/fetchApi';\nimport fetchNormaMovie from './js/markup-movie-card';\n\nconst searchQuery = document.getElementById(`search__form`);\nconst errorText = document.querySelector(`.search__error`);\nconst homeBtn = document.querySelector('.header__home-btn');\nconst movieGallery = document.querySelector(`.gallery`);\n\nsearchQuery.addEventListener(`click`, onSearchBtn);\nhomeBtn.addEventListener(`click`, onHomeBtn);\n\nfetchNormaMovie();\n\nfunction onHomeBtn(e) {\n  document.location = `../index.html`;\n}\nfunction onSearchBtn(e) {\n  //errorText.style.visibility = `hidden`;\n  if (e.target.closest(`button`)) {\n    e.preventDefault();\n    apiService.query = e.currentTarget.elements[0].value;\n    movieGallery.innerHTML = fetchNormaMovie();\n  }\n  //if (movieGallery.childElementCount === 0) {\n  //  errorText.style.visibility = `visible`;\n  //}\n}\n"]}