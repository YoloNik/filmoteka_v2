{"version":3,"sources":["js/fetchApi.js","js/markup-movie-card.js","js/markup-modal.js","js/local-storage.js","index.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","genres","movieId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","catch","error","console","log","query","newQuery","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","getSingleMovie","movieGallery","document","querySelector","errorText","fetchMoviesWhisGenres","style","visibility","movieData","results","map","movieEl","genre_ids","generEl","join","total_results","innerHTML","createCards","el","idx","movieCard","createElement","poster_path","title","release_date","substr","modalWin","fetcMovieForModal","createModal","original_title","vote_average","vote_count","popularity","overview","localStorageMovie","watched","queue","localStorage","getItem","JSON","parse","window","addEventListener","addMovie","e","target","closest","isExist","find","push","setItem","stringify","getElementById","homeBtn","myLibrary","singleMovie","modal","onSearchBtn","preventDefault","currentTarget","elements","value","openModal","onEscCloseModal","dataset","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"src.4e6e9681.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.genres = {};\n    this.movieId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  async getGenres() {\n    return await fetch(\n      `${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`\n    )\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  async getSingleMovie() {\n    return await fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst movieGallery = document.querySelector(`.gallery`);\nconst errorText = document.querySelector(`.search__error`);\n\nexport default function fetchMoviesWhisGenres() {\n  errorText.style.visibility = `hidden`;\n  apiService.getGenres();\n  apiService.getTrendMovies().then(movieData => {\n    const genres = apiService.genresValue;\n    const normaGenres = movieData.results.map(movieEl => {\n      return movieEl.genre_ids\n        .map(generEl => {\n          if (genres[generEl]) return genres[generEl];\n        })\n        .join(', ');\n    });\n    if (movieData.total_results === 0) {\n      movieGallery.innerHTML = '';\n      errorText.style.visibility = `visible`;\n    } else {\n      movieGallery.innerHTML = createCards(movieData.results, normaGenres);\n    }\n  });\n}\n\nexport function createCards(movieData, normaGenres) {\n  return movieData\n    .map((el, idx) => {\n      let movieCard = document.createElement(`div`);\n      return (movieCard.innerHTML = `<div class=\"movie-card\">\n<img src=\"${\n        el.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + el.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" data-id=\"${el.id}\" alt=\"There should be a poster ðŸ˜®\">\n  <div class=\"movie-card__title\">\n\t\t<span>${el.title}</span>\n\t<div class=\"movie-card__info-item\">\n\t\t<span>${normaGenres[idx]} | ${el.release_date.substr(0, 4)}</span>\n\t</div>\n  </div>\n</div>`);\n    })\n    .join('');\n}\n","import apiService from './fetchApi';\n//import fetchNormaMovie from './markup-movie-card';\n\nconst modalWin = document.querySelector('.output-js');\n\nexport default async function fetcMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    const normaGenres = movieData.genres\n      .map(genres => genres[`name`])\n      .join(', ');\n    createModal(movieData, normaGenres);\n  });\n}\n\nfunction createModal(movieData, normaGenres) {\n  return (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t   <h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">add to Watched</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">add to Queue</button>\n        </div>\n    `);\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = [];\n  let queue = [];\n  if (localStorage.getItem('watched')) {\n    watched = JSON.parse(localStorage.getItem('watched'));\n  }\n  if (localStorage.getItem('queue')) {\n    queue = JSON.parse(localStorage.getItem('queue'));\n  }\n\n  window.addEventListener(`click`, addMovie);\n\n  function addMovie(e) {\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n        if (!isExist) {\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n        if (!isExist) {\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        }\n      }\n    });\n  }\n}\n","import apiService from './js/fetchApi';\nimport fetchMoviesWhisGenres from './js/markup-movie-card';\nimport fetcMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\n\nconst searchQuery = document.getElementById(`search__form`);\nconst homeBtn = document.querySelector('.header__home-btn');\nconst myLibrary = document.querySelector('.header__library-btn');\nconst movieGallery = document.getElementById(`gallery`);\nconst singleMovie = document.querySelector('.movie-card');\nconst modal = document.querySelector('.backdrop-modal');\n\nmodal.addEventListener('click', closeModal);\nmovieGallery.addEventListener('click', openModal);\nsearchQuery.addEventListener(`click`, onSearchBtn);\n\nfetchMoviesWhisGenres();\n\nfunction onSearchBtn(e) {\n  if (e.target.closest(`button`)) {\n    e.preventDefault();\n    apiService.query = e.currentTarget.elements[0].value;\n    fetchMoviesWhisGenres();\n  }\n}\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n    apiService.movieId = movieId;\n    fetcMovieForModal();\n\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modal.style.display = `none`;\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modal.style.display = `none`;\n    window.removeEventListener(`keydown`, onEscCloseModal);\n  }\n}\n"]}