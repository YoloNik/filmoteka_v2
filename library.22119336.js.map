{"version":3,"sources":["js/markup-library.js","js/fetchApi.js","js/markup-modal.js","js/local-storage.js","library.js"],"names":["library","document","querySelector","watchedBtn","queueBtn","optionsBtn","storageWatched","JSON","parse","localStorage","getItem","storageQueue","renderLibraryMarkup","closest","renderMovie","toggleLibrary","e","target","classList","add","remove","storage","innerHTML","markup","map","el","normaGenres","genres","join","poster_path","id","title","release_date","substr","addEventListener","apiService","fetchAPI","constructor","searchQuery","page","totalPages","totalResults","movieId","movieName","movieTreilerId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","total_pages","total_results","catch","error","console","log","query","newQuery","numOfPageGet","numOfPageSet","newPage","getGenres","ok","Promise","reject","reduce","acc","name","genresValue","getSingleMovie","getMovieTreiler","modalWin","overlayContent","activeTrailer","totalVideo","fetchMovieForModal","movieData","createModal","trailerBtn","getElementById","closeTrailer","style","width","onTrailerBtn","original_title","results","length","trailerVideos","numOfVideos","forEach","video","idx","key","site","push","contentOfVideo","showVideo","openTrailer","movieTreilerClass","querySelectorAll","numOfVideosDots","leftArrow","rightArrow","watched","watchedText","queueText","queue","markupModal","find","vote_average","vote_count","popularity","overview","localStorageMovie","window","movieInLocalStorage","isExist","filter","setItem","stringify","modal","openModal","onEscCloseModal","dataset","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"library.22119336.js","sourceRoot":"../src","sourcesContent":["const library = document.querySelector('.library');\nconst watchedBtn = document.querySelector('.watchet-btn');\nconst queueBtn = document.querySelector('.queue-btn');\nconst optionsBtn = document.querySelector('.nav-op');\n\nlet storageWatched = JSON.parse(localStorage.getItem(`watched`)) || [];\nlet storageQueue = JSON.parse(localStorage.getItem('queue')) || [];\n\noptionsBtn.addEventListener('click', toggleLibrary);\n\nexport default function renderLibraryMarkup() {\n  if (watchedBtn.closest('.active-btn')) {\n    renderMovie(JSON.parse(localStorage.getItem(`watched`)) || []);\n  }\n  if (queueBtn.closest('.active-btn')) {\n    renderMovie(JSON.parse(localStorage.getItem('queue')) || []);\n  }\n}\n\nfunction toggleLibrary(e) {\n  if (e.target === watchedBtn) {\n    watchedBtn.classList.add('active-btn');\n    queueBtn.classList.remove('active-btn');\n    storageWatched = JSON.parse(localStorage.getItem(`watched`)) || [];\n    renderMovie(storageWatched);\n  }\n  if (e.target === queueBtn) {\n    queueBtn.classList.add('active-btn');\n    watchedBtn.classList.remove('active-btn');\n    storageQueue = JSON.parse(localStorage.getItem('queue')) || [];\n    renderMovie(storageQueue);\n  }\n}\n\nfunction renderMovie(storage) {\n  library.innerHTML = '';\n  let markup = storage\n    .map(el => {\n      const normaGenres = el.genres.map(genres => genres[`name`]).join(', ');\n      return `<div class=\"movie-card\">\n      <img class=\"movie\" src=\"https://image.tmdb.org/t/p/w500${\n        el.poster_path\n      }\" data-id=\"${el.id}\">\n      <p class=\"movie-card__title\">\n        ${el.title}\n        <div class=\"movie-card__info-item\">\n          <span class=\"genre\">${normaGenres} | ${el.release_date.substr(\n        0,\n        4\n      )}</span>\n        </div>\n      </p></div>`;\n    })\n    .join('');\n  library.innerHTML = markup;\n}\n","class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  YOUTUBE_KEY = 'AIzaSyAqwBPstw0ee4duUd71wGhCECpWChRe6Rs';\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalPages = null;\n    this.totalResults = null;\n    this.genres = {};\n    this.movieId = '';\n    this.movieName = '';\n    this.movieTreilerId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.totalPages = data.total_pages;\n        this.totalResults = data.total_results;\n\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get numOfPageGet() {\n    this.page;\n  }\n  set numOfPageSet(newPage) {\n    this.page = newPage;\n  }\n\n  getGenres() {\n    return fetch(`${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  getSingleMovie() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n  getMovieTreiler() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}/videos?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.movieId = data.id;\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst modalWin = document.querySelector('.output-js');\nconst overlayContent = document.querySelector('.overlay-content');\nlet activeTrailer = 0;\nlet totalVideo = 0;\n\nexport default async function fetchMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    let normaGenres = movieData.genres.map(genres => genres[`name`]).join(', ');\n    createModal(movieData, normaGenres);\n\n    const trailerBtn = document.getElementById(movieData.id);\n\n    document.querySelector('.overlay').addEventListener('click', closeTrailer);\n    modalWin.addEventListener('click', onTrailerBtn);\n\n    function onTrailerBtn(e) {\n      if (e.target === trailerBtn) {\n        openTrailer(movieData.original_title);\n      }\n    }\n    function openTrailer(original_title) {\n      apiService.getMovieTreiler().then(data => {\n        if (data) {\n          document.getElementById('myNav').style.width = '100%';\n          if (data.results.length > 0) {\n            const trailerVideos = [];\n            const numOfVideos = [];\n            data.results.forEach((video, idx) => {\n              let { name, key, site } = video;\n              if (site === 'YouTube') {\n                trailerVideos.push(\n                  `<iframe class=\"movieTreiler hide\" src=\"https://www.youtube.com/embed/${key}\"\n\t\t\t\t\t\t\t\t\ttitle=\"${name}\" frameborder=\"0\" allow=\"accelerometer; autoplay;\n\t\t\t\t\t\t\t\t\tclipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\t\t\t\t\t\t\t\t</iframe>`\n                );\n                numOfVideos.push(\n                  `<span class=\"numOfVideos-dot\">${idx + 1}</span>`\n                );\n              }\n            });\n            let contentOfVideo = `\n\t\t\t\t\t\t<h1 class=\"titel\">${original_title}</h1>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t${trailerVideos.join('')}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div class=\"numOfVideos\">${numOfVideos.join('')}</div>`;\n\n            overlayContent.innerHTML = contentOfVideo;\n            activeTrailer = 0;\n            showVideo();\n          } else {\n          }\n        }\n      });\n    }\n    /* Close when someone clicks on the \"x\" symbol inside the overlay */\n    function closeTrailer(e) {\n      if (\n        e.target.closest('.closebtn') ||\n        e.target.closest('.overlay-backdrop')\n      ) {\n        document.getElementById('myNav').style.width = '0%';\n      }\n    }\n  });\n}\n\nfunction showVideo() {\n  const movieTreilerClass = document.querySelectorAll('.movieTreiler');\n  const numOfVideosDots = document.querySelectorAll('.numOfVideos-dot');\n  totalVideo = movieTreilerClass.length;\n  movieTreilerClass.forEach((el, idx) => {\n    if (activeTrailer === idx) {\n      el.classList.add('show');\n      el.classList.remove('hide');\n    } else {\n      el.classList.add('hide');\n      el.classList.remove('show');\n    }\n  });\n\n  numOfVideosDots.forEach((el, idx) => {\n    if (activeTrailer === idx) {\n      el.classList.add('numOfVideos-dot-active');\n    } else {\n      el.classList.remove('numOfVideos-dot-active');\n    }\n  });\n}\nconst leftArrow = document.querySelector('.arrow-left');\nconst rightArrow = document.querySelector('.arrow-right');\nleftArrow.addEventListener('click', () => {\n  if (activeTrailer > 0) {\n    activeTrailer -= 1;\n  } else {\n    activeTrailer = totalVideo - 1;\n  }\n  showVideo();\n});\nrightArrow.addEventListener('click', () => {\n  if (activeTrailer < totalVideo - 1) {\n    activeTrailer += 1;\n  } else {\n    activeTrailer = 0;\n  }\n  showVideo();\n});\n\nfunction createModal(movieData, normaGenres) {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n  let watchedText;\n  let queueText;\n  apiService.movieName = movieData.title;\n\n  const isExistWatched = watched.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistWatched) {\n    watchedText = 'remove from Watched ';\n  } else {\n    watchedText = 'add to Watched';\n  }\n\n  const isExistQueue = queue.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistQueue) {\n    queueText = 'remove from queue ';\n  } else {\n    queueText = 'add to queue';\n  }\n  const markupModal = (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t<div class='player-wrap'>\n\t\t\t\t<button id=\"${movieData.id}\" class=\"player-Btn\">watch movie footage</button>\n\t\t\t</div>\n\t\t\t\t<h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">${watchedText}</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">${queueText}</button>\n        </div>\n    `);\n\n  return markupModal;\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n\n  window.addEventListener(`click`, movieInLocalStorage);\n\n  function movieInLocalStorage(e) {\n    const watchedBtn = document.querySelector('[data-action=\"watched\"]');\n    const queueBtn = document.querySelector('[data-action=\"queue\"]');\n\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          watchedBtn.innerHTML = 'remove from Watched ';\n\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n        } else {\n          watchedBtn.innerHTML = 'add to Watched';\n          watched = watched.filter(el => el.id !== movieData.id);\n\n          localStorage.setItem('watched', JSON.stringify(watched));\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          queueBtn.innerHTML = 'remove from queue ';\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        } else {\n          queueBtn.innerHTML = 'add to queue ';\n          queue = queue.filter(el => el.id !== movieData.id);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        }\n      }\n    });\n  }\n}\n","import renderLibraryMarkup from './js/markup-library';\nimport fetcMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\nimport apiService from './js/fetchApi';\n\nconst library = document.querySelector('.library');\nconst modal = document.querySelector('.backdrop-modal');\n\nlibrary.addEventListener('click', openModal);\nmodal.addEventListener('click', closeModal);\nrenderLibraryMarkup();\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n    apiService.movieId = movieId;\n    fetcMovieForModal();\n\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modal.style.display = `none`;\n    localStorageMovie();\n    renderLibraryMarkup();\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modal.style.display = `none`;\n    window.removeEventListener(`keydown`, onEscCloseModal);\n    renderLibraryMarkup();\n  }\n}\n"]}