{"version":3,"sources":["js/fetchApi.js","js/markup-movie-card.js","index.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","genres","fetchMovie","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","catch","error","console","log","query","newQuery","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","movieGallery","document","querySelector","fetchNormaMovie","movieData","results","map","movieEl","genre_ids","generEl","join","innerHTML","createCards","el","idx","movieCard","createElement","poster_path","title","release_date","substr","getElementById","errorText","homeBtn","onHomeBtn","e","location","onSearchBtn","style","visibility","target","closest","preventDefault","currentTarget","elements","value","addEventListener"],"mappings":"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","file":"src.570260c7.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.genres = {};\n  }\n\n  async fetchMovie() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  async getGenres() {\n    return await fetch(\n      `${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`\n    )\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      });\n  }\n  get genresValue() {\n    return this.genres;\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst movieGallery = document.querySelector(`.gallery`);\n\nexport default function fetchNormaMovie() {\n  apiService.getGenres();\n  apiService.fetchMovie().then(movieData => {\n    const genres = apiService.genresValue;\n    const normaGenres = movieData.results.map(movieEl => {\n      return movieEl.genre_ids\n        .map(generEl => {\n          if (genres[generEl]) return genres[generEl];\n        })\n        .join(', ');\n    });\n    movieGallery.innerHTML = createCards(movieData, normaGenres);\n  });\n}\n\nfunction createCards(movieData, normaGenres) {\n  return movieData.results\n    .map((el, idx) => {\n      let movieCard = document.createElement(`div`);\n      return (movieCard.innerHTML = `<div class=\"movie-card\">\n<img src=\"https://image.tmdb.org/t/p/w500${el.poster_path}\" data-id=\"${\n        el.id\n      }\" alt=\"There should be a poster ðŸ˜®\">\n  <div class=\"movie-card__title\">\n\t\t<span>${el.title}</span>\n\t<div class=\"movie-card__info-item\">\n\t\t<span>${normaGenres[idx]} | ${el.release_date.substr(0, 4)}</span>\n\t</div>\n  </div>\n</div>`);\n    })\n    .join('');\n}\n","import apiService from './js/fetchApi';\nimport fetchNormaMovie from './js/markup-movie-card';\n\nconst searchQuery = document.getElementById(`search__form`);\nconst errorText = document.querySelector(`.search-error`);\nconst homeBtn = document.querySelector('.header__home-btn');\nconst movieGallery = document.querySelector(`.gallery`);\n\nsearchQuery.addEventListener(`click`, onSearchBtn);\nhomeBtn.addEventListener(`click`, onHomeBtn);\n\nfetchNormaMovie();\n\nfunction onHomeBtn(e) {\n  document.location = `../index.html`;\n}\nfunction onSearchBtn(e) {\n  errorText.style.visibility = `hidden`;\n  if (e.target.closest(`button`)) {\n    e.preventDefault();\n    apiService.query = e.currentTarget.elements[0].value;\n    movieGallery.innerHTML = fetchNormaMovie();\n  }\n  //if (movieGallery.childElementCount === 0) {\n  //  errorText.style.visibility = `visible`;\n  //}\n}\n"]}