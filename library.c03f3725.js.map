{"version":3,"sources":["js/fetchApi.js","js/markup-modal.js","js/local-storage.js","library.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","totalPages","totalResults","genres","movieId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","total_pages","total_results","catch","error","console","log","query","newQuery","numOfPageGet","numOfPageSet","newPage","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","getSingleMovie","modalWin","document","querySelector","watched","queue","fetcMovieForModal","movieData","map","join","createModal","watchedText","queueText","markupModal","find","el","innerHTML","poster_path","original_title","vote_average","vote_count","popularity","title","overview","localStorage","getItem","JSON","parse","localStorageMovie","window","addEventListener","movieInLocalStorage","e","watchedBtn","queueBtn","library","target","closest","isExist","removeItem","idx","indexOf","splice","setItem","stringify","push","modal","openModal","onEscCloseModal","dataset","style","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"library.c03f3725.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalPages = null;\n    this.totalResults = null;\n    this.genres = {};\n    this.movieId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.totalPages = data.total_pages;\n        //console.log(data.total_results);\n        this.totalResults = data.total_results;\n        //console.log(this.totalResults);\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get numOfPageGet() {\n    this.page;\n  }\n  set numOfPageSet(newPage) {\n    this.page = newPage;\n  }\n\n  getGenres() {\n    return fetch(`${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  getSingleMovie() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n//import fetchNormaMovie from './markup-movie-card';\n\nconst modalWin = document.querySelector('.output-js');\nlet watched = [];\nlet queue = [];\n\nif (localStorage.getItem('watched')) {\n  watched = JSON.parse(localStorage.getItem('watched'));\n}\nif (localStorage.getItem('queue')) {\n  queue = JSON.parse(localStorage.getItem('queue'));\n}\n\nexport default async function fetcMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    const normaGenres = movieData.genres\n      .map(genres => genres[`name`])\n      .join(', ');\n    createModal(movieData, normaGenres);\n  });\n}\n\nfunction createModal(movieData, normaGenres) {\n  let watchedText;\n  let queueText;\n  const isExistWatched = watched.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistWatched) {\n    watchedText = 'remove from Watched ';\n  } else {\n    watchedText = 'add to Watched';\n  }\n\n  const isExistQueue = queue.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistQueue) {\n    queueText = 'remove from queue ';\n  } else {\n    queueText = 'add to queue';\n  }\n  const markupModal = (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t   <h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">${watchedText}</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">${queueText}</button>\n        </div>\n    `);\n\n  return markupModal;\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = [];\n  let queue = [];\n  if (localStorage.getItem('watched')) {\n    watched = JSON.parse(localStorage.getItem('watched'));\n  }\n  if (localStorage.getItem('queue')) {\n    queue = JSON.parse(localStorage.getItem('queue'));\n  }\n\n  window.addEventListener(`click`, movieInLocalStorage);\n\n  function movieInLocalStorage(e) {\n    const watchedBtn = document.querySelector('[data-action=\"watched\"]');\n    const queueBtn = document.querySelector('[data-action=\"queue\"]');\n    const library = document.querySelector('.library');\n\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          watchedBtn.innerHTML = 'remove from Watched ';\n\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n          library.innerHTML = watched;\n        } else {\n          watchedBtn.innerHTML = 'add to Watched';\n          watched.map(el => {\n            localStorage.removeItem('watched', el);\n\n            let idx = watched.indexOf(el);\n            if (idx !== -1) {\n              watched.splice(idx, 1);\n              localStorage.setItem('watched', JSON.stringify(watched));\n            }\n          });\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          queueBtn.innerHTML = 'remove from queue ';\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        } else {\n          queueBtn.innerHTML = 'add to queue ';\n          queue.map(el => {\n            localStorage.removeItem('queue', el);\n\n            let idx = queue.indexOf(el);\n            if (idx !== -1) {\n              queue.splice(idx, 1);\n              localStorage.setItem('queue', JSON.stringify(queue));\n            }\n          });\n        }\n      }\n    });\n  }\n}\n","//import renderLibraryMarkup from './js/markup-library';\nimport fetcMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\nimport apiService from './js/fetchApi';\n\nconst library = document.querySelector('.library');\nconst modal = document.querySelector('.backdrop-modal');\n\nlibrary.addEventListener('click', openModal);\nmodal.addEventListener('click', closeModal);\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n    apiService.movieId = movieId;\n    fetcMovieForModal();\n\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modal.style.display = `none`;\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modal.style.display = `none`;\n    window.removeEventListener(`keydown`, onEscCloseModal);\n  }\n}\n"]}