{"version":3,"sources":["js/markup-library.js","js/fetchApi.js","js/markup-modal.js","js/local-storage.js","library.js"],"names":["library","document","querySelector","watchedBtn","queueBtn","optionsBtn","storageWatched","JSON","parse","localStorage","getItem","storageQueue","renderLibraryMarkup","closest","renderMovie","toggleLibrary","e","target","classList","add","remove","storage","innerHTML","markup","map","el","normaGenres","genres","join","poster_path","id","title","release_date","substr","addEventListener","apiService","fetchAPI","constructor","searchQuery","page","totalPages","totalResults","movieId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","total_pages","total_results","catch","error","console","log","query","newQuery","numOfPageGet","numOfPageSet","newPage","getGenres","ok","Promise","reject","reduce","acc","name","genresValue","getSingleMovie","modalWin","fetcMovieForModal","movieData","createModal","original_title","vote_average","vote_count","popularity","overview","localStorageMovie","watched","queue","window","addMovie","isExist","find","push","setItem","stringify","modal","openModal","onEscCloseModal","dataset","style","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"library.3b59bd17.js","sourceRoot":"../src","sourcesContent":["const library = document.querySelector('.library');\nconst watchedBtn = document.querySelector('.watchet-btn');\nconst queueBtn = document.querySelector('.queue-btn');\nconst optionsBtn = document.querySelector('.nav-op');\n\nlet storageWatched = JSON.parse(localStorage.getItem(`watched`)) || [];\nlet storageQueue = JSON.parse(localStorage.getItem('queue')) || [];\n\noptionsBtn.addEventListener('click', toggleLibrary);\n\nrenderMovie(storageWatched);\nexport function renderLibraryMarkup() {\n  if (watchedBtn.closest('.active-btn')) {\n    renderMovie(storageWatched);\n  } else {\n    renderMovie(storageQueue);\n  }\n}\n\nfunction toggleLibrary(e) {\n  if (e.target === watchedBtn) {\n    watchedBtn.classList.add('active-btn');\n    queueBtn.classList.remove('active-btn');\n    storageWatched = JSON.parse(localStorage.getItem(`watched`)) || [];\n    renderMovie(storageWatched);\n  }\n  if (e.target === queueBtn) {\n    queueBtn.classList.add('active-btn');\n    watchedBtn.classList.remove('active-btn');\n    storageQueue = JSON.parse(localStorage.getItem('queue')) || [];\n    renderMovie(storageQueue);\n  }\n}\n\nfunction renderMovie(storage) {\n  library.innerHTML = '';\n  let markup = storage\n    .map(el => {\n      const normaGenres = el.genres.map(genres => genres[`name`]).join(', ');\n      return `<div class=\"movie-card\">\n      <img class=\"movie\" src=\"https://image.tmdb.org/t/p/w500${\n        el.poster_path\n      }\" data-id=\"${el.id}\">\n      <p class=\"movie-card__title\">\n        ${el.title}\n        <div class=\"movie-card__info-item\">\n          <span class=\"genre\">${normaGenres} | ${el.release_date.substr(\n        0,\n        4\n      )}</span>\n        </div>\n      </p></div>`;\n    })\n    .join('');\n  library.innerHTML = markup;\n}\n","class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalPages = null;\n    this.totalResults = null;\n    this.genres = {};\n    this.movieId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.totalPages = data.total_pages;\n        //console.log(data.total_results);\n        this.totalResults = data.total_results;\n        //console.log(this.totalResults);\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get numOfPageGet() {\n    this.page;\n  }\n  set numOfPageSet(newPage) {\n    this.page = newPage;\n  }\n\n  getGenres() {\n    return fetch(`${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  getSingleMovie() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n//import fetchNormaMovie from './markup-movie-card';\n\nconst modalWin = document.querySelector('.output-js');\n\nexport default async function fetcMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    const normaGenres = movieData.genres\n      .map(genres => genres[`name`])\n      .join(', ');\n    createModal(movieData, normaGenres);\n  });\n}\n\nfunction createModal(movieData, normaGenres) {\n  return (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t   <h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">add to Watched</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">add to Queue</button>\n        </div>\n    `);\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = [];\n  let queue = [];\n  if (localStorage.getItem('watched')) {\n    watched = JSON.parse(localStorage.getItem('watched'));\n  }\n  if (localStorage.getItem('queue')) {\n    queue = JSON.parse(localStorage.getItem('queue'));\n  }\n\n  window.addEventListener(`click`, addMovie);\n\n  function addMovie(e) {\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n        if (!isExist) {\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n        if (!isExist) {\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        }\n      }\n    });\n  }\n}\n","import renderLibraryMarkup from './js/markup-library';\nimport fetcMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\nimport apiService from './js/fetchApi';\n\nconst library = document.querySelector('.library');\nconst modal = document.querySelector('.backdrop-modal');\n\nlibrary.addEventListener('click', openModal);\nmodal.addEventListener('click', closeModal);\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n    apiService.movieId = movieId;\n    fetcMovieForModal();\n\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modal.style.display = `none`;\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modal.style.display = `none`;\n    window.removeEventListener(`keydown`, onEscCloseModal);\n  }\n}\n"]}