{"version":3,"sources":["js/fetchApi.js","js/markup-movie-card.js","js/markup-modal.js","js/local-storage.js","js/pagination.js","index.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","totalPages","totalResults","genres","movieId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","total_pages","total_results","catch","error","console","log","query","newQuery","numOfPageGet","numOfPageSet","newPage","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","getSingleMovie","getMovieTreiler","YOUTUBE_KEY","movieGallery","document","querySelector","errorText","fetchMoviesWhisGenres","style","visibility","movieData","results","map","movieEl","genre_ids","generEl","join","createCards","movieCard","el","idx","createElement","innerHTML","poster_path","title","release_date","substr","modalWin","fetcMovieForModal","createModal","watched","watchedText","queueText","JSON","parse","localStorage","getItem","queue","markupModal","find","original_title","vote_average","vote_count","popularity","overview","localStorageMovie","window","addEventListener","movieInLocalStorage","e","watchedBtn","queueBtn","target","closest","isExist","filter","setItem","stringify","push","pagOptions","$","pagination","dataSource","locator","totalNumberLocator","pageSize","pageNumber","alias","callback","html","prevText","nextText","pageRange","getElementById","homeBtn","myLibrary","singleMovie","modal","onSearchBtn","preventDefault","currentTarget","elements","value","openModal","onEscCloseModal","dataset","overflow","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"src.568b4711.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  YOUTUBE_KEY = 'AIzaSyAoZCMxd9X9T2zq4yrzvfmXAvZ5Lsi9_ks';\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalPages = null;\n    this.totalResults = null;\n    this.genres = {};\n    this.movieId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.totalPages = data.total_pages;\n        //console.log(data.total_results);\n        this.totalResults = data.total_results;\n        //console.log(this.totalResults);\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get numOfPageGet() {\n    this.page;\n  }\n  set numOfPageSet(newPage) {\n    this.page = newPage;\n  }\n\n  getGenres() {\n    return fetch(`${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  getSingleMovie() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n  getMovieTreiler() {\n    fetch(`https://www.googleapis.com/youtube/v3/list?key=${this.YOUTUBE_KEY}`)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n        return response.json();\n      })\n      .then(data => console.log(data));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst movieGallery = document.querySelector(`.gallery`);\nconst errorText = document.querySelector(`.search__error`);\n\nexport default function fetchMoviesWhisGenres() {\n  errorText.style.visibility = `hidden`;\n  apiService.getGenres();\n  apiService.getTrendMovies().then(movieData => {\n    apiService.totalPages = movieData.total_pages;\n    const genres = apiService.genresValue;\n    const normaGenres = movieData.results.map(movieEl => {\n      return movieEl.genre_ids\n        .map(generEl => {\n          if (genres[generEl]) return genres[generEl];\n        })\n        .join(', ');\n    });\n    createCards(movieData.results, normaGenres);\n  });\n}\n\nexport function createCards(movieData, normaGenres) {\n  const movieCard = movieData\n    .map((el, idx) => {\n      let movieCard = document.createElement(`div`);\n      return (movieCard.innerHTML = `<div class=\"movie-card\">\n<img src=\"${\n        el.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + el.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" data-id=\"${el.id}\" alt=\"There should be a poster 😮\">\n  <div class=\"movie-card__title\">\n\t\t<span>${el.title}</span>\n\t<div class=\"movie-card__info-item\">\n\t\t<span>${normaGenres[idx]} | ${el.release_date.substr(0, 4)}</span>\n\t</div>\n  </div>\n</div>`);\n    })\n    .join('');\n  if (movieData.total_results === 0) {\n    movieGallery.innerHTML = '';\n    errorText.style.visibility = `visible`;\n  } else {\n    movieGallery.innerHTML = movieCard;\n  }\n}\n","import apiService from './fetchApi';\n\nconst modalWin = document.querySelector('.output-js');\n\nexport default async function fetcMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    let normaGenres = movieData.genres.map(genres => genres[`name`]).join(', ');\n    createModal(movieData, normaGenres);\n  });\n}\n\nfunction createModal(movieData, normaGenres) {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n  let watchedText;\n  let queueText;\n\n  const isExistWatched = watched.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistWatched) {\n    watchedText = 'remove from Watched ';\n  } else {\n    watchedText = 'add to Watched';\n  }\n\n  const isExistQueue = queue.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistQueue) {\n    queueText = 'remove from queue ';\n  } else {\n    queueText = 'add to queue';\n  }\n  const markupModal = (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t<button class=\"player\">Watch the trailer</button>\n\t\t\t\t<h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">${watchedText}</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">${queueText}</button>\n        </div>\n    `);\n\n  return markupModal;\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n\n  window.addEventListener(`click`, movieInLocalStorage);\n\n  function movieInLocalStorage(e) {\n    const watchedBtn = document.querySelector('[data-action=\"watched\"]');\n    const queueBtn = document.querySelector('[data-action=\"queue\"]');\n\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          watchedBtn.innerHTML = 'remove from Watched ';\n\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n        } else {\n          watchedBtn.innerHTML = 'add to Watched';\n          watched = watched.filter(el => el.id !== movieData.id);\n\n          localStorage.setItem('watched', JSON.stringify(watched));\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          queueBtn.innerHTML = 'remove from queue ';\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        } else {\n          queueBtn.innerHTML = 'add to queue ';\n          queue = queue.filter(el => el.id !== movieData.id);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        }\n      }\n    });\n  }\n}\n","import apiService from './fetchApi';\nimport { createCards } from './markup-movie-card';\n\nexport default function pagOptions() {\n  $('#pagination-container').pagination({\n    dataSource:\n      'https://api.themoviedb.org/3//trending/movie/week?api_key=87f9885ae1efa5e26738121aab64796c&language=en-US&page=1',\n    locator: 'results',\n    totalNumberLocator: function (response) {\n      return response.total_results;\n    },\n\n    pageSize: 20,\n    pageNumber: 1,\n    alias: {\n      pageNumber: 'page',\n    },\n    callback: function (movieData, pagination) {\n      const genres = apiService.genresValue;\n      const normaGenres = movieData.map(movieEl => {\n        return movieEl.genre_ids\n          .map(generEl => {\n            if (genres[generEl]) return genres[generEl];\n          })\n          .join(', ');\n      });\n\n      var html = createCards(movieData, normaGenres);\n      $('#data-container').html(html);\n    },\n    prevText: '',\n    nextText: '',\n    pageRange: 2,\n  });\n}\n","import apiService from './js/fetchApi';\nimport fetchMoviesWhisGenres from './js/markup-movie-card';\nimport fetcMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\nimport pagOptions from './js/pagination';\n//import scrollUp from './js/scroll-up';\n//import movieTreiler from './js/movie-trailer';\n//import './js/movie-trailer';\n\nconst searchQuery = document.getElementById(`search__form`);\nconst homeBtn = document.querySelector('.header__home-btn');\nconst myLibrary = document.querySelector('.header__library-btn');\nconst movieGallery = document.getElementById(`gallery`);\nconst singleMovie = document.querySelector('.movie-card');\nconst modal = document.querySelector('.backdrop-modal');\nconst modalWin = document.querySelector('.output-js');\n\nmodal.addEventListener('click', closeModal);\nmovieGallery.addEventListener('click', openModal);\nsearchQuery.addEventListener(`click`, onSearchBtn);\n\nfetchMoviesWhisGenres();\n\nfunction onSearchBtn(e) {\n  if (e.target.closest(`button`)) {\n    e.preventDefault();\n    apiService.query = e.currentTarget.elements[0].value;\n    fetchMoviesWhisGenres();\n  }\n}\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n    apiService.movieId = movieId;\n    fetcMovieForModal();\n    //movieTreiler();\n    //console.log(movieTreiler());\n\n    document.querySelector('body').style.overflow = 'hidden';\n    modal.style.overflow = 'scroll';\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modalWin.innerHTML = '';\n    modal.style.display = `none`;\n    document.querySelector('body').style.overflow = 'scroll';\n    //apiService.movieId = 'none';\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modalWin.innerHTML = '';\n    modal.style.display = `none`;\n    document.querySelector('body').style.overflow = 'scroll';\n    window.removeEventListener(`keydown`, onEscCloseModal);\n  }\n}\n//scrollUp();\npagOptions();\n\napiService.getMovieTreiler();\n"]}