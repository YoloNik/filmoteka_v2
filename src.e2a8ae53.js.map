{"version":3,"sources":["js/fetchApi.js","js/markup-movie-card.js","js/markup-modal.js","js/local-storage.js","js/pagination.js","js/movie-trailer.js","index.js"],"names":["apiService","fetchAPI","constructor","searchQuery","page","totalPages","totalResults","genres","movieId","movieName","movieTreilerId","getTrendMovies","URLQuery","BASE_URL","API_KEY","encodeURIComponent","fetch","then","response","status","Error","json","data","total_pages","total_results","catch","error","console","log","query","newQuery","numOfPageGet","numOfPageSet","newPage","getGenres","ok","Promise","reject","normaGenres","reduce","acc","id","name","genresValue","getSingleMovie","getMovieTreiler","movieGallery","document","querySelector","errorText","fetchMoviesWhisGenres","style","visibility","movieData","results","map","movieEl","genre_ids","generEl","join","createCards","movieCard","el","idx","createElement","innerHTML","poster_path","title","release_date","substr","modalWin","overlayContent","activeTrailer","totalVideo","fetchMovieForModal","createModal","trailerBtn","getElementById","addEventListener","closeTrailer","width","onTrailerBtn","e","target","original_title","length","trailerVideos","numOfVideos","forEach","video","key","site","push","contentOfVideo","showVideo","openTrailer","movieTreilerClass","querySelectorAll","numOfVideosDots","classList","add","remove","leftArrow","rightArrow","watched","watchedText","queueText","JSON","parse","localStorage","getItem","queue","markupModal","find","vote_average","vote_count","popularity","overview","localStorageMovie","window","movieInLocalStorage","watchedBtn","queueBtn","closest","isExist","filter","setItem","stringify","pagOptions","$","pagination","dataSource","locator","totalNumberLocator","pageSize","pageNumber","alias","callback","html","prevText","nextText","pageRange","tag","src","player","firstScriptTag","getElementsByTagName","onYouTubeIframeAPIReady","YT","Player","height","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","playVideo","parentNode","insertBefore","done","PlayerState","PLAYING","setTimeout","stopVideo","homeBtn","myLibrary","singleMovie","modal","onSearchBtn","preventDefault","currentTarget","elements","value","openModal","onEscCloseModal","dataset","overflow","display","closeModal","className","code","removeEventListener"],"mappings":"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","file":"src.e2a8ae53.js","sourceRoot":"../src","sourcesContent":["class fetchAPI {\n  BASE_URL = 'https://api.themoviedb.org/3';\n  API_KEY = `87f9885ae1efa5e26738121aab64796c`;\n  YOUTUBE_KEY = 'AIzaSyAqwBPstw0ee4duUd71wGhCECpWChRe6Rs';\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n    this.totalPages = null;\n    this.totalResults = null;\n    this.genres = {};\n    this.movieId = '';\n    this.movieName = '';\n    this.movieTreilerId = '';\n  }\n\n  async getTrendMovies() {\n    let URLQuery = this.searchQuery\n      ? `${this.BASE_URL}/search/movie?api_key=${\n          this.API_KEY\n        }&language=en-US&page=${\n          this.page\n        }&include_adult=false&query=${encodeURIComponent(this.searchQuery)}`\n      : `${this.BASE_URL}/trending/movie/week?api_key=${this.API_KEY}&page=${this.page}`;\n\n    return await fetch(URLQuery)\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.totalPages = data.total_pages;\n        this.totalResults = data.total_results;\n\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n\n  get numOfPageGet() {\n    this.page;\n  }\n  set numOfPageSet(newPage) {\n    this.page = newPage;\n  }\n\n  getGenres() {\n    return fetch(`${this.BASE_URL}/genre/movie/list?api_key=${this.API_KEY}`)\n      .then(data => {\n        if (data.ok) {\n          return data.json();\n        }\n        return Promise.reject(new Error('Error'));\n      })\n      .then(data => {\n        const normaGenres = data.genres.reduce((acc, { id, name }) => {\n          return { ...acc, [id]: name };\n        }, {});\n        this.genres = normaGenres;\n        return normaGenres;\n      })\n      .catch(error => console.log(error));\n  }\n  get genresValue() {\n    return this.genres;\n  }\n  getSingleMovie() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n  getMovieTreiler() {\n    return fetch(\n      `${this.BASE_URL}/movie/${this.movieId}/videos?api_key=${this.API_KEY}`\n    )\n      .then(response => {\n        if (response.status === 404) throw new Error();\n\n        return response.json();\n      })\n      .then(data => {\n        this.movieId = data.id;\n        return data;\n      })\n      .catch(error => console.log(error));\n  }\n}\n\nconst apiService = new fetchAPI();\nexport default apiService;\n","import apiService from './fetchApi';\n\nconst movieGallery = document.querySelector(`.gallery`);\nconst errorText = document.querySelector(`.search__error`);\n\nexport default function fetchMoviesWhisGenres() {\n  errorText.style.visibility = `hidden`;\n  apiService.getGenres();\n  apiService.getTrendMovies().then(movieData => {\n    apiService.totalPages = movieData.total_pages;\n    const genres = apiService.genresValue;\n    const normaGenres = movieData.results.map(movieEl => {\n      return movieEl.genre_ids\n        .map(generEl => {\n          if (genres[generEl]) return genres[generEl];\n        })\n        .join(', ');\n    });\n    createCards(movieData.results, normaGenres);\n  });\n}\n\nexport function createCards(movieData, normaGenres) {\n  const movieCard = movieData\n    .map((el, idx) => {\n      let movieCard = document.createElement(`div`);\n      return (movieCard.innerHTML = `<div class=\"movie-card\">\n<img src=\"${\n        el.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + el.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" data-id=\"${el.id}\" alt=\"There should be a poster 😮\">\n  <div class=\"movie-card__title\">\n\t\t<span>${el.title}</span>\n\t<div class=\"movie-card__info-item\">\n\t\t<span>${normaGenres[idx]} | ${el.release_date.substr(0, 4)}</span>\n\t</div>\n  </div>\n</div>`);\n    })\n    .join('');\n  if (movieData.total_results === 0) {\n    movieGallery.innerHTML = '';\n    errorText.style.visibility = `visible`;\n  } else {\n    movieGallery.innerHTML = movieCard;\n  }\n}\n","import apiService from './fetchApi';\n\nconst modalWin = document.querySelector('.output-js');\nconst overlayContent = document.querySelector('.overlay-content');\nlet activeTrailer = 0;\nlet totalVideo = 0;\n\nexport default async function fetchMovieForModal() {\n  return await apiService.getSingleMovie().then(movieData => {\n    let normaGenres = movieData.genres.map(genres => genres[`name`]).join(', ');\n    createModal(movieData, normaGenres);\n\n    const trailerBtn = document.getElementById(movieData.id);\n\n    document.querySelector('.closebtn').addEventListener('click', closeTrailer);\n    modalWin.addEventListener('click', onTrailerBtn);\n\n    function onTrailerBtn(e) {\n      if (e.target === trailerBtn) {\n        openTrailer(movieData.original_title);\n      }\n    }\n    function openTrailer(original_title) {\n      apiService.getMovieTreiler().then(data => {\n        if (data) {\n          document.getElementById('myNav').style.width = '100%';\n          if (data.results.length > 0) {\n            const trailerVideos = [];\n            const numOfVideos = [];\n            data.results.forEach((video, idx) => {\n              let { name, key, site } = video;\n              if (site === 'YouTube') {\n                trailerVideos.push(\n                  `<iframe class=\"movieTreiler hide\" src=\"https://www.youtube.com/embed/${key}\"\n\t\t\t\t\t\t\t\t\ttitle=\"${name}\" frameborder=\"0\" allow=\"accelerometer; autoplay;\n\t\t\t\t\t\t\t\t\tclipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\n\t\t\t\t\t\t\t\t</iframe>`\n                );\n                numOfVideos.push(\n                  `<span class=\"numOfVideos-dot\">${idx + 1}</span>`\n                );\n              }\n            });\n            console.log();\n            let contentOfVideo = `\n\t\t\t\t\t\t<h1 class=\"titel\">${original_title}</h1>\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t${trailerVideos.join('')}\n\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t<div class=\"numOfVideos\">${numOfVideos.join('')}</div>`;\n\n            overlayContent.innerHTML = contentOfVideo;\n            activeTrailer = 0;\n            showVideo();\n          } else {\n          }\n        }\n      });\n    }\n    /* Close when someone clicks on the \"x\" symbol inside the overlay */\n    function closeTrailer() {\n      document.getElementById('myNav').style.width = '0%';\n    }\n  });\n}\n\nfunction showVideo() {\n  const movieTreilerClass = document.querySelectorAll('.movieTreiler');\n  const numOfVideosDots = document.querySelectorAll('.numOfVideos-dot');\n  totalVideo = movieTreilerClass.length;\n  movieTreilerClass.forEach((el, idx) => {\n    if (activeTrailer === idx) {\n      el.classList.add('show');\n      el.classList.remove('hide');\n    } else {\n      el.classList.add('hide');\n      el.classList.remove('show');\n    }\n  });\n\n  numOfVideosDots.forEach((el, idx) => {\n    if (activeTrailer === idx) {\n      el.classList.add('numOfVideos-dot-active');\n    } else {\n      el.classList.remove('numOfVideos-dot-active');\n    }\n  });\n}\nconst leftArrow = document.querySelector('.arrow-left');\nconst rightArrow = document.querySelector('.arrow-right');\nleftArrow.addEventListener('click', () => {\n  if (activeTrailer > 0) {\n    activeTrailer -= 1;\n  } else {\n    activeTrailer = totalVideo - 1;\n  }\n  showVideo();\n});\nrightArrow.addEventListener('click', () => {\n  if (activeTrailer < totalVideo - 1) {\n    activeTrailer += 1;\n  } else {\n    activeTrailer = 0;\n  }\n  showVideo();\n});\n\nfunction createModal(movieData, normaGenres) {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n  let watchedText;\n  let queueText;\n  apiService.movieName = movieData.title;\n\n  const isExistWatched = watched.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistWatched) {\n    watchedText = 'remove from Watched ';\n  } else {\n    watchedText = 'add to Watched';\n  }\n\n  const isExistQueue = queue.find(el => {\n    return el.id === movieData.id;\n  });\n  if (isExistQueue) {\n    queueText = 'remove from queue ';\n  } else {\n    queueText = 'add to queue';\n  }\n  const markupModal = (modalWin.innerHTML = `<img class=\"modal-content__img\"\n\t\t\tsrc=\"${\n        movieData.poster_path\n          ? 'https://image.tmdb.org/t/p/w500' + movieData.poster_path\n          : 'https://expresspost.in///website/images/reporter_image/default.png'\n      }\" alt=\"${movieData.original_title}\" />\n    <div class=\"wrap\">\n      <h2 class=\"modal-content__title\">${movieData.original_title}</h2>\n      <div class=\"info-wrap modal-content__info-wrap\">\n        <ul class=\"category-list\">\n          <li class=\"category-list__item\">Vote / Votes</li>\n          <li class=\"category-list__item\">Popularity</li>\n          <li class=\"category-list__item\">Original Title</li>\n          <li class=\"category-list__item\">Genre</li>\n        </ul>\n        <ul class=\"category-value-list modal-content__category-value-list\">\n          <li class=\"category-value-list__item\">\n\t\t\t\t\t\t<p class=\"category-value-list__item_bg-color\">${movieData.vote_average} </p>\n\t\t\t\t\t\t<p class=\"category-value-list__item_font-color\"> / ${\n              movieData.vote_count\n            } </p> </li>\n          <li class=\"category-value-list__item\">${movieData.popularity}</li>\n          <li class=\"category-value-list__item\">${movieData.title}</li>\n          <li class=\"category-value-list__item\">${normaGenres}</li>\n        </ul>\n      </div>\n\t\t\t<div class='player-wrap'>\n\t\t\t\t<button id=\"${movieData.id}\" class=\"player-Btn\">watch movie footage</button>\n\t\t\t</div>\n\t\t\t\t<h3 class=\"modal-content__subtitle\">About</h3>\n      <p class=\"modal-content__description\">${movieData.overview}</p>\n      <div class=\"btn-wrap content__btn-wrap\">\n          <button class=\"btn-wrap__btn active\" data-action=\"watched\">${watchedText}</button>\n          <button class=\"btn-wrap__btn \" data-action=\"queue\">${queueText}</button>\n        </div>\n    `);\n\n  return markupModal;\n}\n","import apiService from './fetchApi';\n\nexport default function localStorageMovie() {\n  let watched = JSON.parse(localStorage.getItem('watched')) || [];\n  let queue = JSON.parse(localStorage.getItem('queue')) || [];\n\n  window.addEventListener(`click`, movieInLocalStorage);\n\n  function movieInLocalStorage(e) {\n    const watchedBtn = document.querySelector('[data-action=\"watched\"]');\n    const queueBtn = document.querySelector('[data-action=\"queue\"]');\n\n    apiService.getSingleMovie().then(movieData => {\n      if (e.target.closest(`[data-action=\"watched\"]`)) {\n        const isExist = watched.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          watchedBtn.innerHTML = 'remove from Watched ';\n\n          watched.push(movieData);\n          localStorage.setItem('watched', JSON.stringify(watched));\n        } else {\n          watchedBtn.innerHTML = 'add to Watched';\n          watched = watched.filter(el => el.id !== movieData.id);\n\n          localStorage.setItem('watched', JSON.stringify(watched));\n        }\n      }\n      if (e.target.closest(`[data-action=\"queue\"]`)) {\n        const isExist = queue.find(el => {\n          return el.id === movieData.id;\n        });\n\n        if (!isExist) {\n          queueBtn.innerHTML = 'remove from queue ';\n          queue.push(movieData);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        } else {\n          queueBtn.innerHTML = 'add to queue ';\n          queue = queue.filter(el => el.id !== movieData.id);\n          localStorage.setItem('queue', JSON.stringify(queue));\n        }\n      }\n    });\n  }\n}\n","import apiService from './fetchApi';\nimport { createCards } from './markup-movie-card';\n\nexport default function pagOptions() {\n  $('#pagination-container').pagination({\n    dataSource:\n      'https://api.themoviedb.org/3//trending/movie/week?api_key=87f9885ae1efa5e26738121aab64796c&language=en-US&page=1',\n    locator: 'results',\n    totalNumberLocator: function (response) {\n      return response.total_results;\n    },\n\n    pageSize: 20,\n    pageNumber: 1,\n    alias: {\n      pageNumber: 'page',\n    },\n    callback: function (movieData, pagination) {\n      const genres = apiService.genresValue;\n      const normaGenres = movieData.map(movieEl => {\n        return movieEl.genre_ids\n          .map(generEl => {\n            if (genres[generEl]) return genres[generEl];\n          })\n          .join(', ');\n      });\n\n      var html = createCards(movieData, normaGenres);\n      $('#data-container').html(html);\n    },\n    prevText: '',\n    nextText: '',\n    pageRange: 2,\n  });\n  //const pageOne = document.querySelector('[data-num=\"1\"]');\n  //console.log(pageOne);\n}\n","// 2. This code loads the IFrame Player API code asynchronously.\nconst tag = document.createElement('script');\n\ntag.src = 'https://www.youtube.com/iframe_api';\nvar firstScriptTag = document.getElementsByTagName('script')[0];\nfirstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n// 3. This function creates an <iframe> (and YouTube player)\n//    after the API code downloads.\nvar player;\nfunction onYouTubeIframeAPIReady() {\n  player = new YT.Player('player', {\n    height: '360',\n    width: '640',\n    videoId: 'M7lc1UVf-VE',\n    events: {\n      onReady: onPlayerReady,\n      onStateChange: onPlayerStateChange,\n    },\n  });\n}\n\n// 4. The API will call this function when the video player is ready.\nfunction onPlayerReady(event) {\n  event.target.playVideo();\n}\n\n// 5. The API calls this function when the player's state changes.\n//    The function indicates that when playing a video (state=1),\n//    the player should play for six seconds and then stop.\nvar done = false;\nfunction onPlayerStateChange(event) {\n  if (event.data == YT.PlayerState.PLAYING && !done) {\n    setTimeout(stopVideo, 6000);\n    done = true;\n  }\n}\nfunction stopVideo() {\n  player.stopVideo();\n}\n","import apiService from './js/fetchApi';\nimport fetchMoviesWhisGenres from './js/markup-movie-card';\nimport fetchMovieForModal from './js/markup-modal';\nimport localStorageMovie from './js/local-storage';\nimport pagOptions from './js/pagination';\nimport './js/movie-trailer';\n//import scrollUp from './js/scroll-up';\n//import movieTreiler from './js/movie-trailer';\n//import './js/movie-trailer';\n\nconst searchQuery = document.getElementById(`search__form`);\nconst homeBtn = document.querySelector('.header__home-btn');\nconst myLibrary = document.querySelector('.header__library-btn');\nconst movieGallery = document.getElementById(`gallery`);\nconst singleMovie = document.querySelector('.movie-card');\nconst modal = document.querySelector('.backdrop-modal');\nconst modalWin = document.querySelector('.output-js');\n\nmodal.addEventListener('click', closeModal);\nmovieGallery.addEventListener('click', openModal);\nsearchQuery.addEventListener(`click`, onSearchBtn);\n\nfetchMoviesWhisGenres();\n\nfunction onSearchBtn(e) {\n  if (e.target.closest(`button`)) {\n    e.preventDefault();\n    apiService.query = e.currentTarget.elements[0].value;\n    fetchMoviesWhisGenres();\n  }\n}\n\nfunction openModal(e) {\n  window.addEventListener(`keydown`, onEscCloseModal);\n  if (e.target.closest('.movie-card')) {\n    let movieId = e.target.dataset.id;\n\n    apiService.movieId = movieId;\n\n    fetchMovieForModal();\n\n    document.querySelector('body').style.overflow = 'hidden';\n    modal.style.overflow = 'scroll';\n    modal.style.display = `block`;\n    localStorageMovie();\n  }\n}\nfunction closeModal(e) {\n  if (\n    e.target.closest(`.modal-content__close-btn`) ||\n    e.target.className === 'backdrop-modal'\n  ) {\n    modalWin.innerHTML = '';\n    modal.style.display = `none`;\n    document.querySelector('body').style.overflow = 'scroll';\n    //apiService.movieId = 'none';\n  }\n}\nfunction onEscCloseModal(e) {\n  if (e.code === 'Escape') {\n    modalWin.innerHTML = '';\n    modal.style.display = `none`;\n    document.querySelector('body').style.overflow = 'scroll';\n    window.removeEventListener(`keydown`, onEscCloseModal);\n  }\n}\n\n//scrollUp();\npagOptions();\n"]}